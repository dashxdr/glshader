#ifdef GL_ES
precision mediump float;
#endif

//https://www.shadertoy.com/view/XsX3W8
uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;
varying vec2 surfacePosition;

vec2 fold=vec2(0.4);
vec2 translate=vec2(1.2);
float scale=1.3;
const int iterations = 25;

float hash(float v){
  return fract(sin(dot(vec2(v,v) ,vec2(12.9898,78.233))) * 43758.5453);
}

float noise(float v){
	float f=fract(v);
	return mix(hash(floor(v)),hash(floor(v)+1.0),f);
}

vec2 rotate(vec2 p,float a){
	return vec2(p.x*cos(a)-p.y*sin(a),p.x*sin(a)+p.y*cos(a));
}

void main( void ) {
	vec2 p = gl_FragCoord.xy/resolution-0.5;
	p.x*=resolution.x/resolution.y;
	p*=3.0;
	p+=fold;
	for(int i=0;i<iterations;i++){
		p=abs(p-fold)+fold;
		p=p*scale-translate;
		p=rotate(p,0.05*time);
	}
	gl_FragColor=vec4(noise(length(p)+500.0+0.15*time),noise(p.x+300.0+0.15*time),noise(p.y+0.15*time),1.0);
}
